# release.yml
name: release

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: npm ci
      - run: npm run lint
      - run: npm run test:unit
      - run: npm run build

      - name: Detect and Tag Release
        id: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          VERSION=$(node -p "require('./package.json').version")
          TAG="v$VERSION"

          echo "🔖 Version: $VERSION"
          echo "🏷️ Tag: $TAG"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "⚠️ Tag $TAG already exists."
            echo "is_new_tag=false" >> $GITHUB_OUTPUT
          else
            git tag "$TAG"
            git push origin "$TAG"
            gh release create "$TAG" --generate-notes
            echo "is_new_tag=true" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GHCR
        if: steps.release.outputs.is_new_tag == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        if: steps.release.outputs.is_new_tag == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.IMAGE_NAME }}:v${{ steps.release.outputs.version }}